# project files src files list #
set(PROJECT_SRC_FILES       window/window.cpp
                            utilities/VulkanLogger_VulkanValidationLayerLogger.cpp
                            utilities/VulkanLogger_VulkanRendererApiLogger.cpp
                            vkrenderer/VulkanInstance.cpp
                            vkrenderer/VulkanObjectCreateInfoFactory.cpp
                            vkrenderer/VulkanDebugMessenger.cpp
                            vkrenderer/VulkanPhysicalDeviceManager.cpp 
                            vkrenderer/VulkanPhysicalDevice.cpp 
                            vkrenderer/VulkanQueueFamily.cpp
                            vkrenderer/VulkanLogicalDeviceManager.cpp
                            vkrenderer/VulkanLogicalDevice.cpp 
                            vkrenderer/VulkanSurface.cpp
                            vkrenderer/VulkanSwapChainFactory.cpp
                            vkrenderer/VulkanSwapChain.cpp
                            vkrenderer/VulkanImageView.cpp
                            vkrenderer/VulkanShaderModule.cpp
                            vkrenderer/VulkanPipelineLayout.cpp
                            vkrenderer/VulkanRenderPass.cpp
                            vkrenderer/VulkanGraphicsPipeline.cpp
                            vkrenderer/VulkanRenderPassFactory.cpp
                            vkrenderer/VulkanFrameBuffer.cpp
                            vkrenderer/VulkanCommandPool.cpp
)

# compile definitions
add_compile_definitions(NOMINMAX)

# library & executable config #
add_library(vulkanrenderer ${PROJECT_SRC_FILES})
target_include_directories(vulkanrenderer PUBLIC    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
                                                    $<INSTALL_INTERFACE:include>)
target_link_libraries(vulkanrenderer PUBLIC ${CONAN_TARGETS})                                                

# cmake install config #
install(TARGETS vulkanrenderer  EXPORT ${_EXPORT_PREFIX}
                                RUNTIME DESTINATION ${PROJECT_BIN}
                                LIBRARY DESTINATION ${PROJECT_LIB}
                                ARCHIVE DESTINATION ${PROJECT_ARCHIVE}
)

install(DIRECTORY ${PROJECT_SOURCE_DIR}/include DESTINATION ${PROJECT_INSTALL}/include)