set(MEDIA_DIR ${PROJECT_SOURCE_DIR}/media)

if(LINUX)
set(MEDIA_OUT_DIR ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
elseif(WIN32)
set(MEDIA_OUT_DIR ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE})
endif(LINUX)

file(COPY ${MEDIA_DIR}/models ${MEDIA_DIR}/textures DESTINATION ${MEDIA_OUT_DIR})

file(GLOB VERTEX_SHADER_FILES "${MEDIA_DIR}/shaders/*.vert")
file(GLOB FRAGMENT_SHADER_FILES "${MEDIA_DIR}/shaders/*.frag")

foreach( SHADER_FILE IN LISTS VERTEX_SHADER_FILES )
get_filename_component(FILE_WITH_NO_EX ${SHADER_FILE} NAME_WE)
list(APPEND VERTEX_SHADER_OUTPUT_FILES "${MEDIA_OUT_DIR}/${FILE_WITH_NO_EX}Vert.spv")
endforeach( SHADER_FILE IN LISTS VERTEX_SHADER_FILES )

foreach( SHADER_FILE IN LISTS FRAGMENT_SHADER_FILES )
get_filename_component(FILE_WITH_NO_EX ${SHADER_FILE} NAME_WE)
list(APPEND FRAGMENT_SHADER_OUTPUT_FILES "${MEDIA_OUT_DIR}/${FILE_WITH_NO_EX}Frag.spv")
endforeach( SHADER_FILE IN LISTS FRAGMENT_SHADER_FILES )

add_custom_target(
    COMPILE_VERTEX_SHADER
    ALL
    DEPENDS "${VERTEX_SHADER_OUTPUT_FILES}"
    VERBATIM
    SOURCES ${VERTEX_SHADER_FILES}
)

add_custom_target(
    COMPILE_FRAGMENT_SHADER
    ALL
    DEPENDS "${FRAGMENT_SHADER_OUTPUT_FILES}"
    VERBATIM
    SOURCES ${FRAGMENT_SHADER_FILES}
)

#message("Compiling Shader Files")
foreach( SHADER_FILE IN LISTS VERTEX_SHADER_FILES )
get_filename_component(FILE_WITH_NO_EX ${SHADER_FILE} NAME_WE)
add_custom_command(
    OUTPUT "${MEDIA_OUT_DIR}/${FILE_WITH_NO_EX}Vert.spv"
    COMMAND ${VULKAN_SHADER_COMPILER} "${SHADER_FILE}" "-o" "${MEDIA_OUT_DIR}/${FILE_WITH_NO_EX}Vert.spv"
    DEPENDS "${SHADER_FILE}"
    COMMENT "Compiling ${SHADER_FILE}"
)
endforeach( SHADER_FILE IN LISTS VERTEX_SHADER_FILES )

foreach( SHADER_FILE IN LISTS FRAGMENT_SHADER_FILES )
get_filename_component(FILE_WITH_NO_EX ${SHADER_FILE} NAME_WE)
add_custom_command(
    OUTPUT "${MEDIA_OUT_DIR}/${FILE_WITH_NO_EX}Frag.spv"
    COMMAND ${VULKAN_SHADER_COMPILER} "${SHADER_FILE}" "-o" "${MEDIA_OUT_DIR}/${FILE_WITH_NO_EX}Frag.spv"
    DEPENDS "${SHADER_FILE}"
    COMMENT "Compiling ${SHADER_FILE}"
)
endforeach( SHADER_FILE IN LISTS VERTEX_SHADER_FILES )

